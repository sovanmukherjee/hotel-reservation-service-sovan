spring:
  application:
    name: hotel-service
  data:
    rest:
      base-path: /v1/hotels
  config:
     import: optional:configserver:http://localhost:8099 
  datasource:
    url: ${mysql.url}
    username: ${mysql.username}
    password: ${mysql.password}
  jpa:
    show-sql: true 
    hibernate:
      naming: 
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        id:
          new_generator_mappings: false
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  cloud:
    stream: 
      bindings:
        updateHotelRoomStatus-in-0: 
          destination: crs-hotel-book-status-cmd-topic
          content-type: application/json
      kafka: 
        binder:
          brokers: "localhost:9092"
    function: 
      definition: updateHotelRoomStatus
  
spring.cloud.config.name: hotel-service,config
#spring.cloud.config.discovery.enabled: true
#spring.cloud.config.discovery.serviceId: CRS-CONFIG-SERVER
management.endpoints.web.exposure.include: refresh   
feign:
  circuitbreaker:
    enabled: true
  client:
    config:
      stores:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
#        requestInterceptors:
#          - com.hoel.proxy.filter.FeignClientInterceptor        
server:
  port: 8090
  servlet:
    context-path: /api  
      
eureka.client.service-url.defaultZone: http://localhost:8761/eureka/ 
spring.sleuth.sampler.probability: 1.0   
   
message:
  errorConfig:
      genericErrorCode: HC_GENERIC_ERROR
      genericErrorMessage: There was an error while processing your request. Please try again.
      hotelInfoErrorCode: HC_HOTEL_INFO_ERROR
      hotelInfoErrorMessage: Please provide hotel %s information
      hotelNotFoundErrorCode: HC_HOTEL_NOTFOUND_ERROR
      hotelNotFoundErrorMessage: Hotel %s %s not found.
  messageConfig:
      addUpdateHotelMessage: "Hotel %s %s successfully"
      addRoomMessage: "one %s category room added successfully for %s"
      deleteRoomMessage: "one %s category room deleted from %s"
      updateRoomMessage: "one %s category room updated successfully for %s"
       
    
resilience4j.circuitbreaker:
  instances:
    hrsClient:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpClientErrorException
      ignoreExceptions:
      
      
      
reservation.service.name: RESERVATION-SERVICE  
gateway.service.name: CRS-GATEWAY

spring.main.allow-bean-definition-overriding: true 
security.secret: secretsecretsecretsecretsecretsecretsecretsecret  
#in second   
security.expiration:  3600  
security.appId: crs
security.pass: crs
gateway.restricted: false  

  
     